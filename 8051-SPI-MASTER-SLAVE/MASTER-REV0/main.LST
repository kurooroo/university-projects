C51 COMPILER V9.52.0.0   MAIN                                                              05/09/2021 18:26:20 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: D:\tunaBasicSoft\keilCv5\keil\C51\BIN\C51.EXE main.c BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          #include <REGX52.H>
   2          #include <stdio.h>
   3          #include <intrins.h>
   4          
   5          // Khai bao SPI
   6          #define SPI_SCLK P2_0
   7          #define SPI_MOSI P2_1
   8          #define SPI_MISO P2_2
   9          #define SPI_SS0 P2_3
  10          #define SPI_SS1 P2_4
  11          #define DS18B20_DATA P2_5
  12          
  13          unsigned char temperatureBuffer[2];
  14          // unsigned char slave1Buffer[2];
  15          
  16          // delay ms
  17          void DelayMs(unsigned int time)
  18          {
  19   1          unsigned int i, j;
  20   1          for (i = 0; i < time; i++)
  21   1          {
  22   2              for (j = 0; j < 123; j++)
  23   2              {
  24   3              }
  25   2          }
  26   1      }
  27          
  28          // Delay cho DS18B20
  29          void DS18B20_Delay(unsigned int time)
  30          {
  31   1          while (time--)
  32   1              ;
  33   1      }
  34          
  35          // Khoi tao cam bien
  36          void DS18B20_Init()
  37          {
  38   1          DS18B20_DATA = 1;
  39   1          DS18B20_Delay(8);
  40   1          DS18B20_DATA = 0;
  41   1          DS18B20_Delay(80);
  42   1          DS18B20_DATA = 1;
  43   1          DS18B20_Delay(34);
  44   1      }
  45          
  46          // Doc 1 byte tu DS18B20
  47          unsigned char DS18B20_ReadByte()
  48          {
  49   1          unsigned char i;
  50   1          unsigned char _data = 0x00;
  51   1          for (i = 8; i > 0; i--)
  52   1          {
  53   2              DS18B20_DATA = 0;
  54   2              _data >>= 1;
  55   2              DS18B20_DATA = 1;
C51 COMPILER V9.52.0.0   MAIN                                                              05/09/2021 18:26:20 PAGE 2   

  56   2              if (DS18B20_DATA)
  57   2              {
  58   3                  _data |= 0x80;
  59   3              }
  60   2              DS18B20_Delay(4);
  61   2          }
  62   1          return _data;
  63   1      }
  64          
  65          // Ghi 1 byte vao DS18B20
  66          void DS18B20_WriteByte(unsigned char _data)
  67          {
  68   1          unsigned int i;
  69   1          for (i = 8; i > 0; i--)
  70   1          {
  71   2              DS18B20_DATA = 0;
  72   2              DS18B20_DATA = _data & 0x01;
  73   2              DS18B20_Delay(5);
  74   2              DS18B20_DATA = 1;
  75   2              _data >>= 1;
  76   2          }
  77   1          DS18B20_Delay(4);
  78   1      }
  79          
  80          // Doc nhiet do
  81          void DS18B20_ReadTemperature(void)
  82          {
  83   1          DS18B20_Init();
  84   1          DS18B20_WriteByte(0xCC);
  85   1          DS18B20_WriteByte(0x44);
  86   1          DS18B20_Delay(10);
  87   1          DS18B20_Init();
  88   1          DS18B20_WriteByte(0xCC);
  89   1          DS18B20_WriteByte(0xBE);
  90   1          temperatureBuffer[0] = DS18B20_ReadByte();
  91   1          temperatureBuffer[1] = DS18B20_ReadByte();
  92   1      }
  93          
  94          // Cau hinh UART baudrate 2400
  95          void UART_Init()
  96          {
  97   1          SCON = 0x50; // Chon mode uart 1
  98   1          TMOD = 0x20;
  99   1          TH1 = 0xf3; // lua chon baudrate 2400
 100   1          TR1 = 1;    // Khoi dong timer 1
 101   1          TI = 1;     // Cho phep gui du lieu
 102   1          REN = 1;    // Cho phep nhan du lieu
 103   1          ES = 1;     // Cho phep ngat serial
 104   1          EA = 1;
 105   1      }
 106          
 107          // Ham doc 1 byte UART
 108          unsigned char UART_ReadByte()
 109          {
 110   1          unsigned char _data;
 111   1          while (!RI)
 112   1              ;
 113   1          _data = SBUF;
 114   1          RI = 0;
 115   1          return _data;
 116   1      }
 117          
C51 COMPILER V9.52.0.0   MAIN                                                              05/09/2021 18:26:20 PAGE 3   

 118          // Ham gui 1 byte UART
 119          void UART_WriteByte(unsigned char _data)
 120          {
 121   1          SBUF = _data;
 122   1          while (!TI)
 123   1              ;
 124   1          TI = 0;
 125   1      }
 126          
 127          // Ham gui 1 string UART
 128          void UART_Print(unsigned char *outString)
 129          {
 130   1          char i = 0;
 131   1          while (outString[i] != '\0')
 132   1          {
 133   2              UART_WriteByte(outString[i]);
 134   2              i++;
 135   2          }
 136   1      }
 137          
 138          // Ham gui 1 string UART co xuong dong
 139          void UART_Println(unsigned char *outString)
 140          {
 141   1          char i = 0;
 142   1          while (outString[i] != '\0')
 143   1          {
 144   2              UART_WriteByte(outString[i]);
 145   2              i++;
 146   2          }
 147   1          UART_WriteByte('\n');
 148   1          UART_WriteByte('\r');
 149   1      }
 150          
 151          // Ham khoi tao SPI Master
 152          void SoftSPI_Init(void)
 153          {
 154   1          SPI_SS0 = 1;
 155   1          SPI_SS1 = 1;
 156   1          SPI_SCLK = 0;
 157   1          SPI_MISO = 1;
 158   1      }
 159          
 160          // Ham gui 1 byte SPI
 161          void SoftSPI_WriteByte(unsigned char _data)
 162          {
 163   1          unsigned char i;
 164   1          for (i = 0; i < 8; i++)
 165   1          {
 166   2              if ((_data & 0x80) != 0)
 167   2              {
 168   3                  SPI_MOSI = 1;
 169   3              }
 170   2              else
 171   2              {
 172   3                  SPI_MOSI = 0;
 173   3              }
 174   2              _nop_();
 175   2              _nop_();
 176   2              _nop_();
 177   2              // DelayMs(100);
 178   2              SPI_SCLK = 1;
 179   2              _nop_();
C51 COMPILER V9.52.0.0   MAIN                                                              05/09/2021 18:26:20 PAGE 4   

 180   2              _nop_();
 181   2              _nop_();
 182   2              // DelayMs(100);
 183   2              SPI_SCLK = 0;
 184   2              _data = _data << 1;
 185   2          }
 186   1      }
 187          
 188          // Ham nhan 1 byte SPI
 189          unsigned char SoftSPI_ReadByte()
 190          {
 191   1          unsigned char i, _data = 0x00;
 192   1          for (i = 0; i < 8; i++)
 193   1          {
 194   2              _data <<= 1;
 195   2              SPI_SCLK = 1;
 196   2              _nop_();
 197   2              _nop_();
 198   2              _nop_();
 199   2              if (SPI_MISO)
 200   2              {
 201   3                  _data |= 0x01;
 202   3              }
 203   2              SPI_SCLK = 0;
 204   2              _nop_();
 205   2              _nop_();
 206   2              _nop_();
 207   2          }
 208   1          return _data;
 209   1      }
 210          
 211          void serial_interrupt(void) interrupt 4
 212          {
 213   1          unsigned char uartData;
 214   1          ES = 0;
 215   1          if (TI == 1)
 216   1          {
 217   2              TI = 0;
 218   2          }
 219   1          else
 220   1          {
 221   2              uartData = UART_ReadByte();
 222   2              switch (uartData)
 223   2              {
 224   3              case 49:
 225   3                  SPI_SS0 = 0;
 226   3                  DelayMs(1);
 227   3                  SoftSPI_WriteByte(0x01);
 228   3                  DelayMs(1);
 229   3                  SPI_SS0 = 1;
 230   3                  break;
 231   3              case 50:
 232   3                  SPI_SS0 = 0;
 233   3                  DelayMs(1);
 234   3                  SoftSPI_WriteByte(0x02);
 235   3                  DelayMs(1);
 236   3                  SPI_SS0 = 1;
 237   3                  break;
 238   3              case 51:
 239   3                  SPI_SS1 = 0;
 240   3                  DelayMs(1);
 241   3                  SoftSPI_WriteByte(0x01);
C51 COMPILER V9.52.0.0   MAIN                                                              05/09/2021 18:26:20 PAGE 5   

 242   3                  DelayMs(1);
 243   3                  SPI_SS1 = 1;
 244   3                  break;
 245   3              case 52:
 246   3                  SPI_SS1 = 0;
 247   3                  DelayMs(1);
 248   3                  SoftSPI_WriteByte(0x02);
 249   3                  DelayMs(1);
 250   3                  SPI_SS1 = 1;
 251   3                  break;
 252   3              }
 253   2          }
 254   1          ES = 1;
 255   1      }
 256          
 257          void ReadTemperature(unsigned char slave)
 258          {
 259   1          if (slave == 0)
 260   1          {
 261   2              SPI_SS0 = 0;
 262   2              DelayMs(1);
 263   2              SoftSPI_WriteByte(0xAA);
 264   2              DelayMs(100);
 265   2              temperatureBuffer[0] = SoftSPI_ReadByte();
 266   2              DelayMs(1);
 267   2              temperatureBuffer[1] = SoftSPI_ReadByte();
 268   2              DelayMs(1);
 269   2              SPI_SS0 = 1;
 270   2          }
 271   1          if (slave == 1)
 272   1          {
 273   2              SPI_SS1 = 0;
 274   2              DelayMs(1);
 275   2              SoftSPI_WriteByte(0xAA);
 276   2              DelayMs(100);
 277   2              temperatureBuffer[0] = SoftSPI_ReadByte();
 278   2              DelayMs(1);
 279   2              temperatureBuffer[1] = SoftSPI_ReadByte();
 280   2              DelayMs(1);
 281   2              SPI_SS1 = 1;
 282   2          }
 283   1      }
 284          
 285          void main()
 286          {
 287   1          unsigned char header[] = "Nhiet do ";
 288   1          unsigned char headerMaster[] = "Master: ";
 289   1          unsigned char headerStr0[] = "Slave 0: ";
 290   1          unsigned char headerStr1[] = "Slave 1: ";
 291   1          unsigned char tempStr[6];
 292   1          signed int temp;
 293   1          float currentTemp;
 294   1          UART_Init();
 295   1          UART_WriteByte(0);
 296   1          SoftSPI_Init();
 297   1          SoftSPI_WriteByte(0);
 298   1          DelayMs(500);
 299   1          while (1)
 300   1          {
 301   2              DS18B20_ReadTemperature();
 302   2              temp = temperatureBuffer[0];
 303   2              temp &= 0x00ff;
C51 COMPILER V9.52.0.0   MAIN                                                              05/09/2021 18:26:20 PAGE 6   

 304   2              temp |= (temperatureBuffer[1] << 8);
 305   2              currentTemp = temp * 0.0625;
 306   2              sprintf(tempStr, "%.2f", currentTemp);
 307   2              UART_Print(header);
 308   2              UART_Print(headerMaster);
 309   2              UART_Println(tempStr);
 310   2      
 311   2              ReadTemperature(0);
 312   2              temp = temperatureBuffer[0];
 313   2              temp &= 0x00ff;
 314   2              temp |= (temperatureBuffer[1] << 8);
 315   2              currentTemp = temp * 0.0625;
 316   2              sprintf(tempStr, "%.2f", currentTemp);
 317   2              UART_Print(header);
 318   2              UART_Print(headerStr0);
 319   2              UART_Println(tempStr);
 320   2      
 321   2              ReadTemperature(1);
 322   2              temp = temperatureBuffer[0];
 323   2              temp &= 0x00ff;
 324   2              temp |= (temperatureBuffer[1] << 8);
 325   2              currentTemp = temp * 0.0625;
 326   2              sprintf(tempStr, "%.2f", currentTemp);
 327   2              UART_Print(header);
 328   2              UART_Print(headerStr1);
 329   2              UART_Println(tempStr);
 330   2              DelayMs(500);
 331   2          }
 332   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    921    ----
   CONSTANT SIZE    =     44    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      2      57
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
